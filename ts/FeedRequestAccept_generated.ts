// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @constructor
 */
export namespace PlatformApi{
export class FeedRequestAccept {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns FeedRequestAccept
 */
__init(i:number, bb:flatbuffers.ByteBuffer):FeedRequestAccept {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param FeedRequestAccept= obj
 * @returns FeedRequestAccept
 */
static getRoot(bb:flatbuffers.ByteBuffer, obj?:FeedRequestAccept):FeedRequestAccept {
  return (obj || new FeedRequestAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param FeedRequestAccept= obj
 * @returns FeedRequestAccept
 */
static getSizePrefixedRoot(bb:flatbuffers.ByteBuffer, obj?:FeedRequestAccept):FeedRequestAccept {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FeedRequestAccept()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
reqId():string|null
reqId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
reqId(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns number
 */
feedId():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static start(builder:flatbuffers.Builder) {
  builder.startObject(2);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset reqIdOffset
 */
static addReqId(builder:flatbuffers.Builder, reqIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, reqIdOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number feedId
 */
static addFeedId(builder:flatbuffers.Builder, feedId:number) {
  builder.addFieldInt32(1, feedId, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static end(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static create(builder:flatbuffers.Builder, reqIdOffset:flatbuffers.Offset, feedId:number):flatbuffers.Offset {
  FeedRequestAccept.start(builder);
  FeedRequestAccept.addReqId(builder, reqIdOffset);
  FeedRequestAccept.addFeedId(builder, feedId);
  return FeedRequestAccept.end(builder);
}
}
}
