// automatically generated by the FlatBuffers compiler, do not modify

import * as NS17503805021538163740 from "./Enum_generated";
/**
 * @constructor
 */
export namespace PlatformApi{
export class FeedRequest {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns FeedRequest
 */
__init(i:number, bb:flatbuffers.ByteBuffer):FeedRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param FeedRequest= obj
 * @returns FeedRequest
 */
static getRoot(bb:flatbuffers.ByteBuffer, obj?:FeedRequest):FeedRequest {
  return (obj || new FeedRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param FeedRequest= obj
 * @returns FeedRequest
 */
static getSizePrefixedRoot(bb:flatbuffers.ByteBuffer, obj?:FeedRequest):FeedRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new FeedRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
reqId():string|null
reqId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
reqId(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns PlatformApi.SubReqType
 */
subReqType():NS17503805021538163740.PlatformApi.SubReqType {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : NS17503805021538163740.PlatformApi.SubReqType.Subscribe;
};

/**
 * @returns PlatformApi.FeedType
 */
feedType():NS17503805021538163740.PlatformApi.FeedType {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? /**  */ (this.bb!.readInt16(this.bb_pos + offset)) : NS17503805021538163740.PlatformApi.FeedType.Default;
};

/**
 * @returns number
 */
grouping():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
depth():number {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? this.bb!.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @returns number
 */
frequency():number {
  var offset = this.bb!.__offset(this.bb_pos, 14);
  return offset ? this.bb!.readInt16(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array
 */
markets(index: number):string
markets(index: number,optionalEncoding:flatbuffers.Encoding):string|Uint8Array
markets(index: number,optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;
};

/**
 * @returns number
 */
marketsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 16);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static start(builder:flatbuffers.Builder) {
  builder.startObject(7);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset reqIdOffset
 */
static addReqId(builder:flatbuffers.Builder, reqIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, reqIdOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param PlatformApi.SubReqType subReqType
 */
static addSubReqType(builder:flatbuffers.Builder, subReqType:NS17503805021538163740.PlatformApi.SubReqType) {
  builder.addFieldInt8(1, subReqType, NS17503805021538163740.PlatformApi.SubReqType.Subscribe);
};

/**
 * @param flatbuffers.Builder builder
 * @param PlatformApi.FeedType feedType
 */
static addFeedType(builder:flatbuffers.Builder, feedType:NS17503805021538163740.PlatformApi.FeedType) {
  builder.addFieldInt16(2, feedType, NS17503805021538163740.PlatformApi.FeedType.Default);
};

/**
 * @param flatbuffers.Builder builder
 * @param number grouping
 */
static addGrouping(builder:flatbuffers.Builder, grouping:number) {
  builder.addFieldInt16(3, grouping, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number depth
 */
static addDepth(builder:flatbuffers.Builder, depth:number) {
  builder.addFieldInt16(4, depth, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number frequency
 */
static addFrequency(builder:flatbuffers.Builder, frequency:number) {
  builder.addFieldInt16(5, frequency, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset marketsOffset
 */
static addMarkets(builder:flatbuffers.Builder, marketsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(6, marketsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createMarketsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startMarketsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static end(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

static create(builder:flatbuffers.Builder, reqIdOffset:flatbuffers.Offset, subReqType:NS17503805021538163740.PlatformApi.SubReqType, feedType:NS17503805021538163740.PlatformApi.FeedType, grouping:number, depth:number, frequency:number, marketsOffset:flatbuffers.Offset):flatbuffers.Offset {
  FeedRequest.start(builder);
  FeedRequest.addReqId(builder, reqIdOffset);
  FeedRequest.addSubReqType(builder, subReqType);
  FeedRequest.addFeedType(builder, feedType);
  FeedRequest.addGrouping(builder, grouping);
  FeedRequest.addDepth(builder, depth);
  FeedRequest.addFrequency(builder, frequency);
  FeedRequest.addMarkets(builder, marketsOffset);
  return FeedRequest.end(builder);
}
}
}
