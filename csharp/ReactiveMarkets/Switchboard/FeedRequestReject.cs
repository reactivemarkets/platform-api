// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace ReactiveMarkets.Switchboard
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

public struct FeedRequestReject : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_1_12_0(); }
  public static FeedRequestReject GetRootAsFeedRequestReject(ByteBuffer _bb) { return GetRootAsFeedRequestReject(_bb, new FeedRequestReject()); }
  public static FeedRequestReject GetRootAsFeedRequestReject(ByteBuffer _bb, FeedRequestReject obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public FeedRequestReject __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string ReqId { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetReqIdBytes() { return __p.__vector_as_span<byte>(4, 1); }
#else
  public ArraySegment<byte>? GetReqIdBytes() { return __p.__vector_as_arraysegment(4); }
#endif
  public byte[] GetReqIdArray() { return __p.__vector_as_array<byte>(4); }
  public int ErrorCode { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string ErrorMessage { get { int o = __p.__offset(8); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetErrorMessageBytes() { return __p.__vector_as_span<byte>(8, 1); }
#else
  public ArraySegment<byte>? GetErrorMessageBytes() { return __p.__vector_as_arraysegment(8); }
#endif
  public byte[] GetErrorMessageArray() { return __p.__vector_as_array<byte>(8); }

  public static Offset<ReactiveMarkets.Switchboard.FeedRequestReject> CreateFeedRequestReject(FlatBufferBuilder builder,
      StringOffset req_idOffset = default(StringOffset),
      int error_code = 0,
      StringOffset error_messageOffset = default(StringOffset)) {
    builder.StartTable(3);
    FeedRequestReject.AddErrorMessage(builder, error_messageOffset);
    FeedRequestReject.AddErrorCode(builder, error_code);
    FeedRequestReject.AddReqId(builder, req_idOffset);
    return FeedRequestReject.EndFeedRequestReject(builder);
  }

  public static void StartFeedRequestReject(FlatBufferBuilder builder) { builder.StartTable(3); }
  public static void AddReqId(FlatBufferBuilder builder, StringOffset reqIdOffset) { builder.AddOffset(0, reqIdOffset.Value, 0); }
  public static void AddErrorCode(FlatBufferBuilder builder, int errorCode) { builder.AddInt(1, errorCode, 0); }
  public static void AddErrorMessage(FlatBufferBuilder builder, StringOffset errorMessageOffset) { builder.AddOffset(2, errorMessageOffset.Value, 0); }
  public static Offset<ReactiveMarkets.Switchboard.FeedRequestReject> EndFeedRequestReject(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<ReactiveMarkets.Switchboard.FeedRequestReject>(o);
  }
};


}
